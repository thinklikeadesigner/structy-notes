{
    "cells": [
        {
            "language": "javascript",
            "source": [
                "const isPrime = (n) => {\n    if (n < 2) return false\n      // the definition of a prime number\n      // it has to have 2 distinct factors\n      // 1 * 1, only 1 unique number\n      \n      for (i = 2; i <= Math.sqrt(n); i++){\n        if (n % i == 0){\n          return false\n        }\n      }\n      \n    return true \n      \n      \n      /*\n    n = input number\n    Time: O(square_root(n))\n    Space: O(1)\n      \n      */\n    };"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "creating hashmap"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const s1 = 'asd';\nconst s2 = 'asd'\nconst count = {}\n\nfor (let char of s1){ // O(n)\n    if (!(char in count)){\n        count[char] = 0\n\n    }\n\n    count[char] += 1\n}\n\nfor (let char of s2){ // O(m)\n    if (char in count){\n        count[char] -= 1\n        \n    } else {\n        return false\n    }\n\n    for ( let char in count){ // O(n)\n        if (count[char] !== 0){\n            return false\n        }\n    }\n\n    return true\n}\n\n// since individual loops, they add together O(n + m + n) or O(2n + m) or O(n) linear"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/plain",
                            "value": [
                                "\u001b[33mfalse\u001b[39m"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "if you do an in loop, you iterate through the keys of an object, this works with OBJECT type\n\n```js\n for ( let char in count){\n```\n\nFor more details, see [jsnotes](../notes/jsnotes.nnb#for-of).\n\n"
            ],
            "outputs": []
        }
    ]
}